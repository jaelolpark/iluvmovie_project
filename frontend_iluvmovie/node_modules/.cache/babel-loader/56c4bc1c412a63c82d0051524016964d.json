{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/root';\nimport promise from 'redux-promise-middleware'; // import { createStore, applyMiddleware } from 'redux'\n// import { composeWithDevTools } from 'redux-devtools-extension'\n// import promise from 'redux-promise-middleware'\n// import thunk from 'redux-thunk'\n// import rootReducer from './reducers/root'\n// const middleware = applyMiddleware(promise,thunk)\n// export default createStore(rootReducer, composeWithDevTools(middleware))\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import { Provider } from 'react-redux';\n// import { createStore, applyMiddleware } from 'redux';\n// import thunk from 'redux-thunk';\n// import rootReducer from './reducers';\n// const store = createStore(rootReducer, applyMiddleware(thunk));\n// ReactDOM.render(\n//   <Provider store={store} >\n//     <App />\n//   </Provider>, document.getElementById('container')\n// )\n\nconst middleware = applyMiddleware(promise, thunk);\nexport default createStore(rootReducer, composeWithDevTools(middleware));","map":{"version":3,"sources":["/Users/jaelolpark/Flatiron School/iluvmovie_project/frontend_iluvmovie/src/redux/store.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","thunk","rootReducer","promise","middleware","composeWithDevTools"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAGJ,eAAe,CAACG,OAAD,EAASF,KAAT,CAAlC;AACA,eAAeF,WAAW,CAACG,WAAD,EAAcG,mBAAmB,CAACD,UAAD,CAAjC,CAA1B","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/root';\nimport promise from 'redux-promise-middleware'\n\n// import { createStore, applyMiddleware } from 'redux'\n// import { composeWithDevTools } from 'redux-devtools-extension'\n// import promise from 'redux-promise-middleware'\n// import thunk from 'redux-thunk'\n// import rootReducer from './reducers/root'\n\n// const middleware = applyMiddleware(promise,thunk)\n// export default createStore(rootReducer, composeWithDevTools(middleware))\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import { Provider } from 'react-redux';\n// import { createStore, applyMiddleware } from 'redux';\n// import thunk from 'redux-thunk';\n// import rootReducer from './reducers';\n \n// const store = createStore(rootReducer, applyMiddleware(thunk));\n \n// ReactDOM.render(\n//   <Provider store={store} >\n//     <App />\n//   </Provider>, document.getElementById('container')\n// )\n\nconst middleware = applyMiddleware(promise,thunk)\nexport default createStore(rootReducer, composeWithDevTools(middleware))"]},"metadata":{},"sourceType":"module"}