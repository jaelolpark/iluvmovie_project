{"ast":null,"code":"var _jsxFileName = \"/Users/jaelolpark/Flatiron School/iluvmovie_project/frontend_iluvmovie/src/components/Home/MovieContainer.js\";\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport MovieCard from './MovieCard';\nimport { connect } from 'react-redux';\nimport { moreMovie } from '../../actions/movieActions';\n\nclass MovieContainer extends Component {\n  //   constructor() {\n  //     super() \n  //     this.state = {\n  //        start: 0\n  //     }\n  //  }\n  //  componentDidMount() {\n  //     window.addEventListener('scroll', this.onScroll, false);\n  //  }\n  //  componentWillUnmount() {\n  //     window.removeEventListener('scroll', this.onScroll, false);\n  //  }\n  //  onScroll = () => {\n  //     if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight) && !this.props.landingMovies.isLoading) \n  //        {this.onPaginatedSearch()}\n  //  } \n  //  onPaginatedSearch = () => {\n  //        this.setState({\n  //           start: this.state.start + 56\n  //        })\n  //        if (this.props.filter === 'all') {\n  //           return moreMovie(this.state.start)\n  //           .then((data) => {this.props.Movies(data.results)})\n  //        } else {\n  //           return moreMovie(this.state.start, this.props.filter)\n  //           .then((data) => {this.props.Movies(data.results)})\n  //        }\n  //     }\n  render() {\n    const eachMovie = this.props.Movies.map(movie => React.createElement(MovieCard, {\n      key: movie.id,\n      movieId: movie.id,\n      img: movie['poster_240x342'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n    return React.createElement(Card.Group, {\n      itemsPerRow: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, eachMovie);\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    Movies: state.Movies\n  };\n};\n\nexport default connect(mapStatetoProps)(MovieContainer);","map":{"version":3,"sources":["/Users/jaelolpark/Flatiron School/iluvmovie_project/frontend_iluvmovie/src/components/Home/MovieContainer.js"],"names":["React","Component","Card","MovieCard","connect","moreMovie","MovieContainer","render","eachMovie","props","Movies","map","movie","id","mapStatetoProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,4BAA1B;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAEvC;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGEM,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IACxC,oBAAC,SAAD;AACG,MAAA,GAAG,EAAEA,KAAK,CAACC,EADd;AAEG,MAAA,OAAO,EAAED,KAAK,CAACC,EAFlB;AAGG,MAAA,GAAG,EAAED,KAAK,CAAC,gBAAD,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB,CAAlB;AAMA,WACG,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,WAAW,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIJ,SADJ,CADH;AAKD;;AAjDoC;;AAoDvC,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAQ;AACNL,IAAAA,MAAM,EAAEK,KAAK,CAACL;AADR,GAAR;AAGD,CAJD;;AAMA,eAAeN,OAAO,CAACU,eAAD,CAAP,CAAyBR,cAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Card } from 'semantic-ui-react';\nimport MovieCard from './MovieCard'\nimport { connect } from 'react-redux';\nimport { moreMovie } from '../../actions/movieActions'\n\nclass MovieContainer extends Component {\n\n//   constructor() {\n//     super() \n\n//     this.state = {\n//        start: 0\n//     }\n//  }\n\n//  componentDidMount() {\n//     window.addEventListener('scroll', this.onScroll, false);\n//  }\n\n//  componentWillUnmount() {\n//     window.removeEventListener('scroll', this.onScroll, false);\n//  }\n\n//  onScroll = () => {\n//     if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight) && !this.props.landingMovies.isLoading) \n//        {this.onPaginatedSearch()}\n//  } \n\n//  onPaginatedSearch = () => {\n//        this.setState({\n//           start: this.state.start + 56\n//        })\n//        if (this.props.filter === 'all') {\n//           return moreMovie(this.state.start)\n//           .then((data) => {this.props.Movies(data.results)})\n//        } else {\n//           return moreMovie(this.state.start, this.props.filter)\n//           .then((data) => {this.props.Movies(data.results)})\n//        }\n//     }\n\n\n  render() {\n    const eachMovie = this.props.Movies.map((movie) => \n    <MovieCard \n       key={movie.id}\n       movieId={movie.id}\n       img={movie['poster_240x342']} />)\n\n    return(\n       <Card.Group itemsPerRow={7}>\n          {eachMovie}\n       </Card.Group>\n    )\n  }\n} \n\nconst mapStatetoProps = state => {\n  return ({\n    Movies: state.Movies\n  })\n}\n\nexport default connect(mapStatetoProps)(MovieContainer)"]},"metadata":{},"sourceType":"module"}