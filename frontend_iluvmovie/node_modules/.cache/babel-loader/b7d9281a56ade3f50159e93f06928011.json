{"ast":null,"code":"// export const createUser = user => {\n//   return dispatch => {\n//     fetch(\"http://localhost:3000/users\", {\n//       method: \"POST\",\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Accept: 'application/json'\n//       },\n//       body: JSON.stringify({user})\n//     })\n//       .then(resp => resp.json())\n//       .then(data => {\n//         console.log(data)\n//         if (data.message) {\n//         }\n//         else {\n//           localStorage.setItem(\"token\", data.jwt)\n//           dispatch(loginUser(data.user))\n//         }\n//       })\n//   }\n// }\nexport const createUser = (username, password) => {\n  return fetch(\"http://localhost:3000/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(res => res.json());\n};\nexport const userLoginFetch = user => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(resp => resp.json());\n  };\n};\nexport const loginUser = userObj => ({\n  type: 'LOGIN_USER',\n  payload: userObj\n});\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER'\n});","map":{"version":3,"sources":["/Users/jaelolpark/Flatiron School/iluvmovie_project/frontend_iluvmovie/src/actions/authActions.js"],"names":["createUser","username","password","fetch","method","headers","body","JSON","stringify","then","res","json","userLoginFetch","user","dispatch","Accept","resp","loginUser","userObj","type","payload","logoutUser"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,UAAU,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAChD,SAAOC,KAAK,gCAAgC;AACzCC,IAAAA,MAAM,EAAE,MADiC;AAEzCC,IAAAA,OAAO,EAAE;AACN,sBAAgB;AADV,KAFgC;AAKzCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAClBP,MAAAA,QAAQ,EAAEA,QADQ;AAElBC,MAAAA,QAAQ,EAAEA;AAFQ,KAAf;AALmC,GAAhC,CAAL,CASJO,IATI,CASCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATR,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMC,cAAc,GAAGC,IAAI,IAAI;AACpC,SAAOC,QAAQ,IAAI;AACjB,WAAOX,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPU,QAAAA,MAAM,EAAE;AAFD,OAFiC;AAM1CT,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACK,QAAAA;AAAD,OAAf;AANoC,KAAhC,CAAL,CAQJJ,IARI,CAQCO,IAAI,IAAIA,IAAI,CAACL,IAAL,EART,CAAP;AASD,GAVD;AAWD,CAZM;AAgBL,OAAO,MAAMM,SAAS,GAAGC,OAAO,KAAK;AACnCC,EAAAA,IAAI,EAAE,YAD6B;AAEnCC,EAAAA,OAAO,EAAEF;AAF0B,CAAL,CAAzB;AAMP,OAAO,MAAMG,UAAU,GAAG,OAAO;AAC/BF,EAAAA,IAAI,EAAE;AADyB,CAAP,CAAnB","sourcesContent":["\n// export const createUser = user => {\n//   return dispatch => {\n//     fetch(\"http://localhost:3000/users\", {\n//       method: \"POST\",\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Accept: 'application/json'\n//       },\n//       body: JSON.stringify({user})\n//     })\n//       .then(resp => resp.json())\n//       .then(data => {\n//         console.log(data)\n//         if (data.message) {\n\n//         }\n//         else {\n//           localStorage.setItem(\"token\", data.jwt)\n//           dispatch(loginUser(data.user))\n//         }\n//       })\n//   }\n// }\n\nexport const createUser = (username, password) => {\n  return fetch(`http://localhost:3000/users`, {\n     method: \"POST\",\n     headers: {\n        \"Content-Type\": \"application/json\"\n     },\n     body: JSON.stringify({\n        username: username,\n        password: password,\n     })\n  }).then(res => res.json())\n} \n\nexport const userLoginFetch = user => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify({user})\n    })\n      .then(resp => resp.json())\n  }\n}\n\n\n\n  export const loginUser = userObj => ({\n    type: 'LOGIN_USER',\n    payload: userObj\n  })\n\n\n  export const logoutUser = () => ({\n    type: 'LOGOUT_USER'\n})\n"]},"metadata":{},"sourceType":"module"}