{"ast":null,"code":"export const createUser = user => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    }).then(resp => resp.json()).then(data => {\n      console.log(data);\n\n      if (data.message) {} else {\n        localStorage.setItem(\"token\", data.jwt);\n        dispatch(loginUser(data.user));\n      }\n    });\n  };\n};\n\nconst loginUser = userObj => ({\n  type: 'LOGIN_USER',\n  payload: userObj\n});","map":{"version":3,"sources":["/Users/jaelolpark/Flatiron School/iluvmovie_project/frontend_iluvmovie/src/actions/authActions.js"],"names":["createUser","user","dispatch","fetch","method","headers","Accept","body","JSON","stringify","then","resp","json","data","console","log","message","localStorage","setItem","jwt","loginUser","userObj","type","payload"],"mappings":"AACA,OAAO,MAAMA,UAAU,GAAGC,IAAI,IAAI;AAChC,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAF0B;AAMnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,QAAAA;AAAD,OAAf;AAN6B,KAAhC,CAAL,CAQGS,IARH,CAQQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EARhB,EASGF,IATH,CASQG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,CAACG,OAAT,EAAkB,CACjB,CADD,MACO;AACLC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,GAAnC;AACAjB,QAAAA,QAAQ,CAACkB,SAAS,CAACP,IAAI,CAACZ,IAAN,CAAV,CAAR;AACD;AACF,KAhBH;AAiBD,GAlBD;AAmBD,CApBM;;AAsBP,MAAMmB,SAAS,GAAGC,OAAO,KAAK;AAC5BC,EAAAA,IAAI,EAAE,YADsB;AAE5BC,EAAAA,OAAO,EAAEF;AAFmB,CAAL,CAAzB","sourcesContent":["\nexport const createUser = user => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data)\n        if (data.message) {\n        } else {\n          localStorage.setItem(\"token\", data.jwt)\n          dispatch(loginUser(data.user))\n        }\n      })\n  }\n}\n\nconst loginUser = userObj => ({\n  type: 'LOGIN_USER',\n  payload: userObj\n})"]},"metadata":{},"sourceType":"module"}