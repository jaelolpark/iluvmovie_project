{"ast":null,"code":"import _defineProperty from \"/Users/andrew/development/misc/iluvmovie_project/frontend_iluvmovie/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nlet initialState = {\n  Movies: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case 'Display_Movies':\n      return _objectSpread({}, state, {\n        Movies: action.data\n      });\n\n    case 'Display_More_Movies':\n      return _objectSpread({}, state, {\n        Movies: [...state.Movies, ...action.data]\n      });\n\n    default:\n      {\n        return initialState;\n      }\n  }\n});","map":{"version":3,"sources":["/Users/andrew/development/misc/iluvmovie_project/frontend_iluvmovie/src/redux/reducers/movieReducer.js"],"names":["initialState","Movies","state","action","type","data"],"mappings":";;;;;;AAAA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAAnB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAK,gBAAL;AACE,+BAAWF,KAAX;AAAkBD,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAAjC;;AAEF,SAAK,qBAAL;AACE,+BAAWH,KAAX;AAAkBD,QAAAA,MAAM,EAAE,CAAC,GAAGC,KAAK,CAACD,MAAV,EAAkB,GAAGE,MAAM,CAACE,IAA5B;AAA1B;;AAEF;AAAS;AAAE,eAAOL,YAAP;AAAsB;AARnC;AAUD,CAXD","sourcesContent":["let initialState = {\n  Movies: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n    case 'Display_Movies':\n      return {...state, Movies: action.data }\n\n    case 'Display_More_Movies':\n      return {...state, Movies: [...state.Movies, ...action.data]}\n    \n    default: { return initialState; }\n  }\n}"]},"metadata":{},"sourceType":"module"}